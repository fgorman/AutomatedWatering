A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN D3Project.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE D3Project.asm XR GEN DB EP NOMOD51 INCDIR(C:\Program Files (x86)\SiLabs\MC
                      U\Inc) 

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     $nosymbols 
                       3     ;*****************************************************************************
                       4     ;  
                       5     ;
                       6     ;  FILE NAME   :  D3Project.ASM 
                       7     ;  TARGET MCU  :  C8051F340
                       8     ;
                       9     ;*****************************************************************************
                      10     ;
                     273     $list 
                     274     ;
                     275     ;*****************************************************************************
                     276     ;*****************************************************************************
                     277     ;
                     278     ; EQUATES
                     279     ;
                     280     ;*****************************************************************************
                     281     
  0094               282     ENABLE           EQU  P1.4            ; Enable signal to LCD
  0092               283     RW               EQU  P1.2             ;R/W signal to LCD.
  0093               284     RS               EQU  P1.3            ; RS signal to LCD
  00A0               285     LCD              EQU  P2              ; Output port to LCD.
                     286     
  00B0               287     keyport          equ P3               ; Keypad port connected here
  00B0               288     row1             equ P3.0             ; Row 1 (pin 8)
  00B1               289     row2             equ P3.1             ; Row 2 (pin 1) 
  00B2               290     row3             equ P3.2             ; Row 3 (pin 2)
  00B3               291     row4             equ P3.3             ; Row 4 (pin 4)
                     292     
  00B4               293     col1             equ P3.4             ; Column 1 (pin 3)
  00B5               294     col2             equ P3.5             ; Column 2 (pin 5)
  00B6               295     col3             equ P3.6             ; Column 3 (pin 6)
  00B7               296     col4             equ P3.7             ; Column 4 (pin 7)
                     297     
  0085               298     pump1           equ P0.5                                                        ; Pump 1 en
                             able/disable
  0084               299     pump2                                     equ P0.4                                         
                                          ; Pump 2 enable/disable
                     300     
                     301     
  0000               302     NULL                                             equ 00H
                     303     
                     304     ;*****************************************************************************
                     305     ;*****************************************************************************
                     306     ;
                     307     ; RESET and INTERRUPT VECTORS
                     308     ;
                     309     ;*****************************************************************************
                     310     
                     311              ; Reset Vector
0000                 312                      ORG 0000H
0000 02002D          313                      ljmp Main            ; Locate a jump to the start of
                     314                                           ; code at the reset vector.
                     315     
002B                 316                      org  002BH           ; Vector address for Timer 2 ISR
002B A19A            317                      jmp  TIMER2_ISR      ; The ISR is large; need to relocate
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE     2

                     318                                           ;  and jump to it
                     319     
                     320     ;*****************************************************************************
                     321     ;*****************************************************************************
                     322     ;
                     323     ; MAIN CODE
                     324     ;
                     325     ;*****************************************************************************
                     326     
                     327     
002D                 328     Main:
                     329              ; Disable the WDT.
002D 53D9BF          330                      anl PCA0MD,#NOT(040h); Clear Watchdog Enable bit
                     331     
                     332              ; Enable the Port I/O Crossbar
0030 75A4FF          333                                                                      mov P0MDOUT, #0FFh   ; Mak
                             e P0 output push-pull
0033 75A6FF          334                      mov P2MDOUT, #0ffh   ; Make P2 output push-pull
0036 75A5FF          335                      mov P1MDOUT, #0ffh   ; Make P1 output push-pull
0039 75F2FF          336                      mov P1MDIN, #0ffh    ; Make port pins input mode digital
003C 75A70F          337                      mov P3MDOUT, #0fh    ; Make P3 low nibble output push-pull
003F 75E240          338                      mov XBR1, #40h       ; Enable Crossbar
0042 75F500          339                                                                      mov P4MDIN, #000h    ; Mak
                             es P4 analog input
                     340     
0045 75BA1F          341                      mov AMX0N, #01Fh    ; Set ADC negative to GND
0048 75BCFC          342                                                                      mov ADC0CF, #0FCh   ; Make
                              ADC0H:ADC0L left justified
004B 75E880          343                      mov ADC0CN, #080h   ; Set ADC to enabled and trigger on write to ADC flag
004E 75D108          344                                                                      mov REF0CN, #008h    ; Set
                              Voltage Regulator to VDD
                     345                             
                     346                                                                                               
0051 7B00            347                      mov R3, #0          ; Clears LCD position counter
0053 3101            348                      call Init           ; LCD Initialization proceedure
0055 B1D8            349                      call Clear          ; Clear LCD Display
0057 B1BC            350                                                                      call cursor_off     ; Turn
                              the cursor off
0059 D100            351                                                                      call delay
005B C285            352                                                                      clr pump1                 
                                                   ;Initialize the pumps as turned off
005D C284            353                                                                      clr pump2
005F 314D            354                                                                      call Names                
                                                   ; Display class and group members
0061 B1A9            355                                                                      call Timer2_Init          
                             ; Initialize the Timer operation for the interrupt
                     356     
                     357                                             
                     358                             
                     359              ; For this program, the keys are numbered
                     360              ; as:
                     361     
                     362              ;      +----+----+----+----+
                     363              ;      |  1 |  2 |  3 |  A | row1
                     364              ;      +----+----+----+----+
                     365              ;      |  4 |  5 |  6 |  B | row2
                     366              ;      +----+----|----+----+
                     367              ;      |  7 |  8 |  9 |  C | row3
                     368              ;      +----+----+----+----+
                     369              ;      |  * |  0 |  # |  D | row4
                     370              ;      +----+----+----+----+  
                     371              ;       col1 col2 col3 col4
                     372     
                     373              ; The pressed key number will be stored in
                     374              ; R0. Therefore, R0 is initially cleared.
                     375              ; Each key is scanned, and if it is not
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE     3

                     376              ; pressed R0 is incremented. In that way,
                     377              ; when the pressed key is found, R0 will
                     378              ; contain the key's number.
                     379     
                     380              ; The general purpose flag, F0, is used
                     381              ; by the column-scan subroutine to indicate
                     382              ; whether or not a pressed key was found
                     383              ; in that column.
                     384              ; If, after returning from colScan, F0 is
                     385              ; set, this means the key was found.
                     386     
                     387     
                     388     
                     389     ;*****************************************************************************
                     390     ;*****************************************************************************
                     391     ;
                     392     ;  main_menu subroutine
                     393     ;  
                     394     ;  Sets up the main menu text, the waits for a selection on the keypad to be
                     395     ;  made. You can go to the test menu (A), and change the desired moisure level
                     396     ;  of the plants. 
                     397     ;
                     398     ;        Registers: R0 (to catch the key from keyscan)
                     399     ;  Flags: F0 (to test if a key has been pressed)
                     400     ;
                     401     ;*****************************************************************************
                     402     
                     403     
0063                 404     main_menu:       
0063 316F            405                                                                      call main_menu_text
0065 11B0            406     mm_scan:                                 call keyscan
                     407     
0067 B80306          408                                                                      cjne R0, #03h, mm_next1
006A 117D            409                                                                      call test_menu
006C C2D5            410                                                                      CLR F0
006E 80F5            411                                                                      jmp mm_scan
                     412     
0070 B80706          413     mm_next1:                                cjne R0, #07h, mm_end
0073 31B8            414                                                                      call desired_levels
0075 C2D5            415                                                                      CLR F0
0077 80EC            416                                                                      jmp mm_scan
                     417     
0079 C2D5            418     mm_end:          CLR F0               ; clear flag
007B 80E8            419                      JMP mm_scan
                     420     
                     421     
                     422     ;*****************************************************************************
                     423     ;*****************************************************************************
                     424     ;
                     425     ;  test_menu subroutine
                     426     ;  
                     427     ;  Sets up the test menu text, the waits for a test to be selected or to
                     428     ;  cancel to go back to the main menu.
                     429     ;
                     430     ;        Registers: R0 (to catch the key from keyscan)
                     431     ;  Flags: F0 (to test if a key has been pressed)
                     432     ;
                     433     ;*****************************************************************************
                     434     
                     435     
007D                 436     test_menu:
007D 75A800          437                                                                      mov IE, #00h              
                                  
                     438                                                                      
0080 C285            439                                                                      clr pump1
0082 C284            440                                                                      clr pump2 
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE     4

                     441                                                                                                
                                           
0084 319A            442                                                                call test_menu_text
                     443     
0086 C2D5            444     tm_scan:                                 CLR F0
0088 11B0            445                                                                      call keyscan  
                     446                                                             
008A B80006          447                      cjne R0, #00h, tm_next1
008D 9133            448                                                          call lcd_test
008F C2D5            449                                                          CLR F0
0091 80F3            450                                                          jmp tm_scan
                     451     
0093 B80106          452     tm_next1:        cjne R0, #01h, tm_next2
0096 9172            453                                                          call sensors_test
0098 C2D5            454                                                          CLR F0
009A 80EA            455                                                          jmp tm_scan
                     456     
009C B80206          457     tm_next2:        cjne R0, #02h, tm_next3
009F B157            458                                                          call pumps_test
00A1 C2D5            459                                                          CLR F0
00A3 80E1            460                                                          jmp tm_scan
                     461                                                      
00A5 B80CDE          462     tm_next3:              cjne R0, #0Ch, tm_scan
00A8 C2D5            463                                                          CLR F0
                     464     
00AA 316F            465                      call main_menu_text
                     466     
00AC 75A8A0          467                                                          mov IE, #0A0h
                     468     
00AF 22              469                                                                      ret
                     470     
                     471     ;*****************************************************************************
                     472     ;*****************************************************************************
                     473     ;
                     474     ;  keyscan subroutine
                     475     ;
                     476     ;*****************************************************************************
                     477     
                     478     
00B0 7800            479     keyscan:                                 MOV R0, #0           ; clear R0 - the first key is
                              key0
                     480     
                     481     ; scan row1
00B2 D2B3            482                      SETB row4            ; set row4
00B4 C2B0            483                      CLR row1             ; clear row1
00B6 11D9            484                      CALL colScan         ; call column-scan subroutine
00B8 20D51D          485                      JB F0, finish        ; | if F0 is set, jump to end of program 
                     486                                           ; | (because the pressed key was found
                     487                                           ; | and its number is in R0)
                     488     
                     489     ; scan row2
00BB D2B0            490                      SETB row1            ; set row1
00BD C2B1            491                      CLR row2             ; clear row2
00BF 11D9            492                      CALL colScan         ; call column-scan subroutine
00C1 20D514          493                      JB F0, finish        ; | if F0 is set, jump to end of program 
                     494                                           ; | (because the pressed key was found
                     495                                           ; | and its number is in R0)
                     496     
                     497     ; scan row3
00C4 D2B1            498                      SETB row2            ; set row2
00C6 C2B2            499                      CLR row3             ; clear row3
00C8 11D9            500                      CALL colScan         ; call column-scan subroutine
00CA 20D50B          501                      JB F0, finish        ; | if F0 is set, jump to end of program 
                     502                                           ; | (because the pressed key was found
                     503                                           ; | and its number is in R0)
                     504     
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE     5

                     505     ; scan row4
00CD D2B2            506                      SETB row3            ; set row3
00CF C2B3            507                      CLR row4             ; clear row4
00D1 11D9            508                      CALL colScan         ; call column-scan subroutine
00D3 20D502          509                      JB F0, finish        ; | if F0 is set, jump to end of program 
                     510                                           ; | (because the pressed key was found
                     511                                           ; | and its number is in R0)
                     512     
00D6 80D8            513                      JMP keyscan           ; | go back to scan row 1
                     514                                           ; | (this is why row4 is set at the
                     515                                           ; | start of the program - when the
                     516                                           ; | program jumps back to start, row4
                     517                                           ; | has just been scanned)
                     518     
00D8 22              519     finish:          ret
                     520     
                     521     
                     522     
                     523     ;*****************************************************************************
                     524     ;*****************************************************************************
                     525     ;
                     526     ;  colScan subroutine
                     527     ;
                     528     ;  The subroutine scans columns. It is called during each scan row event.
                     529     ;  If a key in the current row being scaned has been pressed, the subroutine
                     530     ;  will determine which column. when a key if found to be pressed, the
                     531     ;  subroutine waits until the key has been released before continuing. This
                     532     ;  method debounces the input keys.
                     533     ;
                     534     ;  GLOBAL REGESTERS USED: R0
                     535     ;  GLOBAL BITS USED: F0(PSW.5)
                     536     ;  INPUT: col1(P3.4), col2(P3.5), col3(P3.6), col4(P3.7)
                     537     ;  OUTPUT: R0, F0
                     538     ;
                     539     ;*****************************************************************************
                     540     
00D9 20B405          541     colScan:         JB col1, nextcol     ; check if col1 key is pressed
00DC 30B4FD          542                      JNB col1, $          ; If yes, then wait for key release
00DF 801D            543                      JMP gotkey           ; Have key, return
00E1 08              544     nextcol:         INC R0               ; Increment keyvalue
00E2 20B505          545                      JB col2, nextcol2    ; check if col2 key is pressed
00E5 30B5FD          546                      JNB col2, $          ; If yes, then wait for key release
00E8 8014            547                      JMP gotkey           ; Have key, return
00EA 08              548     nextcol2:        INC R0               ; Increment keyvalue
00EB 20B605          549                      JB col3, nextcol3    ; check if col3 key is pressed
00EE 30B6FD          550                      JNB col3, $          ; If yes, then wait for key release
00F1 800B            551                      JMP gotkey           ; Have key, return
00F3 08              552     nextcol3:        INC R0               ; Increment keyvalue
00F4 20B705          553                      JB col4, nokey       ; check if col4 key is pressed
00F7 30B7FD          554                      JNB col4, $          ; If yes, then wait for key release
00FA 8002            555                      JMP gotkey           ; Have key, return
00FC 08              556     nokey:           INC R0               ; Increment keyvalue
00FD 22              557                      RET                  ; finished scan, no key pressed
                     558     
00FE D2D5            559     gotKey:          SETB F0              ; key found - set F0
0100 22              560                      RET                  ; and return from subroutine
                     561     
                     562     
                     563     ;*****************************************************************************
                     564     ;*****************************************************************************
                     565     ;
                     566     ;  init subroutine
                     567     ;
                     568     ;  The subroutine is used initialize the LCD during startup. 
                     569     ;
                     570     ;  LOCAL REGISTERS USED: None
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE     6

                     571     ;  INPUT: 
                     572     ;  OUTPUT: LCD (P2), ENABLE (P1.4)
                     573     ;
                     574     ;***************************************************************************** 
                     575     
0101 C293            576     init:            CLR RS               ; Register Select ( 0 = Command )
0103 C292            577                                                                      CLR RW               ; Rea
                             d/Write ( 1 = Read ; 0 = Write )
0105 C294            578                                                                      clr ENABLE           ; Hig
                             h to Low Transition Stores the data
0107 D100            579                      call delay           ; Waits for LCD to stabilize
0109 D11C            580                      call reset           ; Sends reset bytes to LCD
                     581                                                                                           ; E X
                              R R D D D D D D D D   
                     582                                           ; | | S W 7 6 5 4 3 2 1 0 
                     583                                           ; | | | | | | | | | | | |
010B 75A038          584                      mov LCD, #38H        ; 1 0 0 0 0 0 1 1 1 0 0 0 Function Set Word 
                     585                                           ;
010E D140            586                      call Busy            ; Check Busy Flag
0110 D294            587                      setb ENABLE          ; Latched the first byte.
0112 D100            588                      call delay           ; Waits.
0114 C294            589                      clr ENABLE           ; Then resets latch.
0116 D140            590                      call busy            ; Check Busy Flag
                     591                                           ; E X R R D D D D D D D D   
                     592                                           ; | | S W 7 6 5 4 3 2 1 0 
                     593                                           ; | | | | | | | | | | | |
0118 75A008          594                      mov LCD, #08H        ; 1 0 0 0 0 0 0 0 1 0 0 0 Display Off word
011B D140            595                      call Busy            ; Check Busy Flag
011D D294            596                      setb ENABLE          ; Latched the first byte.
011F D100            597                      call delay           ; Waits.
0121 C294            598                      clr ENABLE           ; Then resets latch.
0123 D140            599                      call Busy            ; Check Busy Flag
                     600                                           ; E X R R D D D D D D D D   
                     601                                           ; | | S W 7 6 5 4 3 2 1 0 
                     602                                           ; | | | | | | | | | | | |
0125 75A00F          603                      mov LCD, #0FH        ; 1 0 0 0 0 0 0 0 1 1 1 1 Display On word.
0128 D140            604                      call Busy            ; Check Busy Flag
012A D294            605                      setb ENABLE          ; Latched the first byte.
012C D100            606                      call delay           ; Waits.
012E C294            607                      clr ENABLE           ; Then resets latch
0130 D140            608                      call Busy            ; Check Busy Flag
                     609                                           ; E X R R D D D D D D D D   
                     610                                           ; | | S W 7 6 5 4 3 2 1 0 
                     611                                           ; | | | | | | | | | | | |
0132 75A006          612                      mov LCD, #06H        ; 1 0 0 0 0 0 0 0 0 1 1 0 Entry Mode word
0135 D140            613                      call Busy            ; Check Busy Flag
0137 D294            614                      setb ENABLE          ; Latched the first byte.
0139 D100            615                      call delay           ; Waits.
013B C294            616                      clr ENABLE           ; Then resets latch.
013D D140            617                      call Busy            ; Check Busy Flag
                     618                                           ; E X R R D D D D D D D D   
                     619                                           ; | | S W 7 6 5 4 3 2 1 0 
                     620                                           ; | | | | | | | | | | | |
013F 75A002          621                      mov LCD, #02H        ; 1 0 0 0 0 0 0 0 0 0 1 0 Display Home word
0142 D140            622                      call Busy            ; Check Busy Flag
0144 D294            623                      setb ENABLE          ; Latched the first byte.
0146 D100            624                      call delay           ; Waits.
0148 C294            625                      clr ENABLE           ; Then resets latch.
014A D140            626                      call Busy            ; Check Busy Flag
                     627     
014C 22              628                      ret
                     629     
                     630     
                     631     ;*****************************************************************************
                     632     ;*****************************************************************************
                     633     ;
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE     7

                     634     ;Names subroutine
                     635     ;
                     636     ;Prints out the group memebers names
                     637     
                     638     ;*****************************************************************************
                     639     
014D                 640     Names:
014D B1BC            641                                                                      call cursor_off
014F 7480            642                                                                      mov A, #80H
0151 7143            643                                                                      call lcd_position
                     644     
0153 90065A          645                                                                      mov DPTR, #classdb   
0156 B1E4            646                                                              call send_string
                     647                                                                             
0158 74C0            648                                              mov A, #0C0H
015A 7143            649                                                                      call lcd_position
                     650     
015C 90066E          651                                                                      mov DPTR, #fosterdb
015F B1E4            652                                                                      call send_string
                     653     
0161 7494            654                                              mov A, #94H
0163 7143            655                                                                      call lcd_position
                     656     
0165 90067F          657                                                                      mov DPTR, #timmydb
0168 B1E4            658                                                                      call send_string
                     659                                                                      
                     660                                                                      
016A D105            661                                      call four_second_delay
                     662     
016C B1D8            663                                                                      call Clear
                     664                                                                      
016E 22              665                                                                      ret
                     666     
                     667     ;*****************************************************************************
                     668     ;*****************************************************************************
                     669     ;
                     670     ;  Main menu text subroutine
                     671     ;
                     672     ;        Setup main menu for the device
                     673     ;
                     674     ;*****************************************************************************
                     675     
                     676     
016F                 677     main_menu_text:
016F B1D8            678                                                                     call clear
0171 7480            679                                                                     mov A, #80H
0173 7143            680                                                                     call lcd_position
                     681     
0175 900690          682                                                                     mov DPTR, #pnamedb         
                                                           
0178 B1E4            683                     call send_string
                     684     
017A 74C0            685                                                             mov A, #0C0H
017C 7143            686                                                                     call lcd_position
                     687     
017E 9006A5          688                                                                     mov DPTR, #msensor1db
0181 B1E4            689                                                                     call send_string
                     690     
0183 7494            691                                                             mov A, #94H
0185 7143            692                                                                     call lcd_position
                     693     
0187 9006AF          694                                                                     mov DPTR, #msensor2db
018A B1E4            695                                                                     call send_string
                     696     
                     697     
018C 74D4            698                                                             mov A, #0D4H
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE     8

018E 7143            699                                                                     call lcd_position
                     700     
0190 9006B9          701                                                                     mov DPTR, #uvsensordb
0193 B1E4            702                                                                     call send_string
                     703     
                     704     
0195 74C0            705     mmtend:                                 mov A, #0C0H
0197 7143            706                                                               call lcd_position
                     707     
0199 22              708                                                                     ret
                     709     
                     710     ;*****************************************************************************
                     711     ;*****************************************************************************
                     712     ;
                     713     ;  Test menu text subroutine
                     714     ;
                     715     ;        Setup test menu for the device
                     716     ;
                     717     ;*****************************************************************************
                     718     
019A                 719     test_menu_text:                
019A B1D8            720                                                      call clear
019C 7480            721                                                      mov A, #80H
019E 7143            722                                                      call lcd_position
                     723     
01A0 9006C4          724                                                      mov DPTR, #tmlcddb
01A3 B1E4            725                                                      call send_string
                     726     
                     727     
01A5 74C0            728                  mov A, #0C0H
01A7 7143            729                                                      call lcd_position
                     730     
01A9 9006D0          731                                                      mov DPTR, #tmsensorsdb
01AC B1E4            732                                                      call send_string
                     733     
                     734     
01AE 7494            735                      mov A, #94H
01B0 7143            736                                                      call lcd_position
                     737     
01B2 9006E0          738                                                      mov DPTR, #tmpumpsdb
01B5 B1E4            739                                                      call send_string
                     740            
                     741                              
01B7 22              742                                    ret
                     743     
                     744     
                     745     ;*****************************************************************************
                     746     ;*****************************************************************************
                     747     ;
                     748     ;  Set desired levels subroutine
                     749     ;
                     750     ;        Menu to set the desired levels for the plants
                     751     ;
                     752     ;  Registers: R0 for key, R1 for RAM pointer, R2 for counter
                     753     ;
                     754     ;*****************************************************************************
                     755     
                     756     
01B8                 757     desired_levels:
01B8 C285            758                                                     clr pump1                               
01BA C284            759                                                     clr pump2
                     760                                                     
01BC C2D5            761                                                     CLR F0
                     762     
01BE 75A800          763                                                     mov IE, #00h
01C1 D100            764                                                     call delay      
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE     9

                     765                     
01C3 B1D8            766                                                     call clear
                     767     
01C5 7480            768                                                     mov A, #80h
01C7 7143            769                                                     call lcd_position
01C9 9007A9          770                                                     mov DPTR, #desireddb1
01CC B1E4            771                                                     call send_string
                     772     
01CE 74C0            773                                                     mov A, #0C0h
01D0 7143            774                                                     call lcd_position
01D2 9007BB          775                                                     mov DPTR, #desireddb2
01D5 B1E4            776                                                     call send_string
                     777     
01D7 7494            778                                                     mov A, #94h
01D9 7143            779                                                     call lcd_position
01DB 9007A9          780                                                     mov DPTR, #desireddb1
01DE B1E4            781                                                     call send_string
                     782     
01E0 74D4            783                                                     mov A, #0D4h
01E2 7143            784                                                     call lcd_position
01E4 9007C4          785                                                     mov DPTR, #desireddb3
01E7 B1E4            786                                                     call send_string
                     787     
01E9 B1CA            788                                                     call cursor_on
                     789     
01EB 74C9            790                                                     mov A, #0C9h
01ED 7143            791                                                     call lcd_position
                     792     
                     793     ;msensor1
01EF                 794     dl_key:                 
01EF C2D5            795                                                     clr F0
                     796     
01F1 11B0            797                                                     call keyscan
                     798     
01F3 E8              799                                                     mov A, R0
01F4 FF              800                                                     mov R7, A
                     801     
01F5 7126            802                                                     call number_zero_two
                     803     
01F7 F550            804                                                     mov 50h, A
                     805                                                     
01F9 20D502          806                                                     jb F0, dl_key0
01FC 80F1            807                                                     jmp dl_key
                     808     
                     809     
                     810     
01FE C2D5            811     dl_key0:                clr F0
                     812     
0200 11B0            813                                                     call keyscan
                     814     
0202 E8              815                                                     mov A, R0
0203 FE              816                                                     mov R6, A
                     817                                                     
0204 BF0109          818                                               cjne R7, #01h, dl_key1
                     819     
0207 51EE            820                                                     call number_zero_five
                     821     
0209 F551            822                                                     mov 51h, A
                     823     
020B 20D50B          824                                                     jb F0, dl_key2
020E 80EE            825                                                     jmp dl_key0
                     826     
0210 5192            827     dl_key1:                call number_zero_nine
                     828     
0212 F551            829                                                     mov 51h, A
                     830     
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    10

0214 20D502          831                                                     jb F0, dl_key2
0217 80E5            832                                                     jmp dl_key0
                     833                                                     
                     834     
0219 C2D5            835     dl_key2:                clr F0
                     836     
021B 11B0            837                                                     call keyscan
                     838     
021D BE050C          839                                                     cjne R6, #05h, dl_key3
0220 BF0109          840                                                     cjne R7, #01h, dl_key3
                     841     
0223 51EE            842                                                     call number_zero_five
                     843     
0225 F552            844                                                     mov 52h, A
                     845     
0227 20D50B          846                                                     jb F0, dl_key4
022A 80ED            847                                                     jmp dl_key2
                     848     
022C 5192            849     dl_key3:                call number_zero_nine
                     850     
022E F552            851                                                     mov 52h, A
                     852     
0230 20D502          853                                                     jb F0, dl_key4
0233 80E4            854                                                     jmp dl_key2
                     855                                                     
                     856     
                     857     
                     858     ;msensor2
0235                 859     dl_key4:                                                                
0235 74DD            860                                                     mov A, #0DDh
0237 7143            861                                                     call lcd_position
                     862     
0239                 863     dl_key5:                        
0239 C2D5            864                                                     clr F0
                     865     
023B 11B0            866                                                     call keyscan
                     867     
023D E8              868                                                     mov A, R0
023E FF              869                                                     mov R7, A
                     870     
023F 7126            871                                                     call number_zero_two
                     872     
0241 F553            873                                                     mov 53h, A
                     874                                                     
0243 20D502          875                                                     jb F0, dl_key6
0246 80F1            876                                                     jmp dl_key5
                     877     
                     878     
                     879     
0248                 880     dl_key6:                
0248 C2D5            881                                                     clr F0
                     882     
024A 11B0            883                                                     call keyscan
                     884     
024C E8              885                                                     mov A, R0
024D FE              886                                                     mov R6, A
                     887     
                     888                                                     
024E BF0109          889                                               cjne R7, #01h, dl_key7
                     890     
0251 51EE            891                                                     call number_zero_five
                     892     
0253 F554            893                                                     mov 54h, A
                     894     
0255 20D50B          895                                                     jb F0, dl_key8
0258 80EE            896                                                     jmp dl_key6
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    11

                     897     
025A 5192            898     dl_key7:                call number_zero_nine
                     899     
025C F554            900                                                     mov 54h, A
                     901     
025E 20D502          902                                                     jb F0, dl_key8
0261 80E5            903                                                     jmp dl_key6
                     904                                                     
                     905     
0263 C2D5            906     dl_key8:                clr F0
                     907     
0265 11B0            908                                                     call keyscan
                     909     
0267 BE050C          910                                                     cjne R6, #05h, dl_key9
026A BF0109          911                                                     cjne R7, #01h, dl_key9
                     912     
026D 51EE            913                                                     call number_zero_five
                     914     
026F F555            915                                                     mov 55h, A
                     916     
0271 20D50B          917                                                     jb F0, dl_end
0274 80ED            918                                                     jmp dl_key8
                     919     
0276 5192            920     dl_key9:                call number_zero_nine
                     921     
0278 F555            922                                                     mov 55h, A
                     923     
027A 20D502          924                                                     jb F0, dl_end
027D 80E4            925                                                     jmp dl_key8
                     926     
                     927     
                     928     
027F C2D5            929     dl_end:                 CLR F0
                     930     
0281 11B0            931                                                     call keyscan 
                     932     
0283 B80EF9          933                                                     cjne R0, #0Eh, dl_end
0286 C2D5            934                                                     clr F0
0288 B1BC            935                                                     call cursor_off
028A D100            936                                                     call delay
                     937     
028C 316F            938                                                     call main_menu_text
028E 75A8A0          939                                                     mov IE, #0A0h
                     940                                                     
0291 22              941                                                     ret
                     942     
                     943     
                     944     
                     945     ;*****************************************************************************
                     946     ;*****************************************************************************
                     947     ;
                     948     ;  Get mumber from keypad subroutine
                     949     ;
                     950     ;        Subroutine checks if grabbed key is a number, and displays it, if it is.
                     951     ;        Checks 0-9
                     952     ;
                     953     ;*****************************************************************************
                     954     
0292                 955     number_zero_nine:
0292 B80D06          956                                                     cjne R0, #0dh, nzn0
0295 7430            957                                                     mov A, #30h
0297 B1F5            958                                                     call display
0299 804F            959                                                     jmp nzn_end
                     960     
029B B80006          961     nzn0:                           cjne R0, #00h, nzn1
029E 7431            962                                                     mov A, #31h
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    12

02A0 B1F5            963                                                     call display
02A2 8046            964                                                     jmp nzn_end
                     965     
02A4 B80106          966     nzn1:                           cjne R0, #01h, nzn2
02A7 7432            967                                                     mov A, #32h
02A9 B1F5            968                                                     call display
02AB 803D            969                                                     jmp nzn_end
                     970     
02AD B80206          971     nzn2:                           cjne R0, #02h, nzn3
02B0 7433            972                                                     mov A, #33h
02B2 B1F5            973                                                     call display
02B4 8034            974                                                     jmp nzn_end
                     975     
02B6 B80406          976     nzn3:                           cjne R0, #04h, nzn4
02B9 7434            977                                                     mov A, #34h
02BB B1F5            978                                                     call display
02BD 802B            979                                                     jmp nzn_end
                     980     
02BF B80506          981     nzn4:                           cjne R0, #05h, nzn5
02C2 7435            982                                                     mov A, #35h
02C4 B1F5            983                                                     call display
02C6 8022            984                                                     jmp nzn_end
                     985     
02C8 B80606          986     nzn5:                           cjne R0, #06h, nzn6
02CB 7436            987                                                     mov A, #36h
02CD B1F5            988                                                     call display
02CF 8019            989                                                     jmp nzn_end
                     990     
02D1 B80806          991     nzn6:                           cjne R0, #08h, nzn7
02D4 7437            992                                                     mov A, #37h
02D6 B1F5            993                                                     call display
02D8 8010            994                                                     jmp nzn_end
                     995     
02DA B80906          996     nzn7:                           cjne R0, #09h, nzn8
02DD 7438            997                                                     mov A, #38h
02DF B1F5            998                                                     call display
02E1 8007            999                                                     jmp nzn_end
                    1000     
02E3 B80A05         1001     nzn8:                           cjne R0, #0Ah, nzn_no_key
02E6 7439           1002                                                     mov A, #39h
02E8 B1F5           1003                                                     call display
                    1004                                                     
02EA                1005     nzn_end:
02EA 22             1006                                                     ret
                    1007     
02EB                1008     nzn_no_key:
02EB C2D5           1009                                                     clr F0
02ED 22             1010                                                     ret
                    1011     
                    1012     
02EE                1013     number_zero_five:
02EE B80D06         1014                                                     cjne R0, #0dh, nzf0
02F1 7430           1015                                                     mov A, #30h
02F3 B1F5           1016                                                     call display
02F5 802B           1017                                                     jmp nzf_end
                    1018     
02F7 B80006         1019     nzf0:                           cjne R0, #00h, nzf1
02FA 7431           1020                                                     mov A, #31h
02FC B1F5           1021                                                     call display
02FE 8022           1022                                                     jmp nzf_end
                    1023     
0300 B80106         1024     nzf1:                           cjne R0, #01h, nzf2
0303 7432           1025                                                     mov A, #32h
0305 B1F5           1026                                                     call display
0307 8019           1027                                                     jmp nzf_end
                    1028     
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    13

0309 B80206         1029     nzf2:                           cjne R0, #02h, nzf3
030C 7433           1030                                                     mov A, #33h
030E B1F5           1031                                                     call display
0310 8010           1032                                                     jmp nzf_end
                    1033     
0312 B80406         1034     nzf3:                           cjne R0, #04h, nzf4
0315 7434           1035                                                     mov A, #34h
0317 B1F5           1036                                                     call display
0319 8007           1037                                                     jmp nzf_end
                    1038     
031B B80505         1039     nzf4:                           cjne R0, #05h, nzf_no_key
031E 7435           1040                                                     mov A, #35h
0320 B1F5           1041                                                     call display
                    1042     
0322 22             1043     nzf_end:                ret
                    1044     
0323                1045     nzf_no_key:
0323 C2D5           1046                                                     clr F0
0325 22             1047                                                     ret
                    1048     
                    1049     
                    1050     
0326                1051     number_zero_two:
0326 B80D06         1052                                                     cjne R0, #0dh, nzt0
0329 7430           1053                                                     mov A, #30h
032B B1F5           1054                                                     call display
032D 8010           1055                                                     jmp nzt_end
                    1056     
032F B80006         1057     nzt0:                           cjne R0, #00h, nzt1
0332 7431           1058                                                     mov A, #31h
0334 B1F5           1059                                                     call display
0336 8007           1060                                                     jmp nzt_end
                    1061     
0338 B80105         1062     nzt1:                           cjne R0, #01h, nzt_no_key
033B 7432           1063                                                     mov A, #32h
033D B1F5           1064                                                     call display
                    1065                                     
033F 22             1066     nzt_end:                ret
                    1067     
0340 C2D5           1068     nzt_no_key: clr F0
0342 22             1069                                                     ret
                    1070     
                    1071     
                    1072     
                    1073     
                    1074     ;*****************************************************************************
                    1075     ;*****************************************************************************
                    1076     ;
                    1077     ;  lcd_position subroutine
                    1078     ;
                    1079     ;        Set the cursor on specified location in ACC. 
                    1080     ;
                    1081     ;*****************************************************************************
                    1082     
                    1083     
0343                1084     lcd_position: 
0343 7B00           1085                                                                      mov R3, #00H
0345 C293           1086                                                                      clr RS
0347 C292           1087                                                                      clr RW
0349 F5A0           1088                                                                      mov LCD, A
034B D294           1089                                                                      setb ENABLE
034D D100           1090                                                                      call delay
034F C294           1091                                                                      clr ENABLE
                    1092     
0351 22             1093                                                                      ret
                    1094     
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    14

                    1095     
                    1096     ;*****************************************************************************
                    1097     ;*****************************************************************************
                    1098     ;  
                    1099     ;  bin_to_ascii subroutine
                    1100     ;
                    1101     ;  Converts 8 bit binary number to hex ASCII numbers
                    1102     ;
                    1103     ;  Input: 8 bit binary number in ACC
                    1104     ;  Output: ASCII numbers in 42h (Hundreds), 41h (tens), 40h (Ones) to LCD
                    1105     ;
                    1106     ;
                    1107     ;
                    1108     ;*****************************************************************************
                    1109     
                    1110     
                    1111     
0352                1112     bin_to_ascii:           ;Binary to BCD
0352 75F064         1113                                                     mov B, #64h   ; 100
0355 84             1114                                                     DIV AB        ; /100
0356 F540           1115                                                     mov 40h, A     ; store A in R0
0358 E5F0           1116                                                     mov A, B      ; get remainder
035A 75F00A         1117                                                     mov B, #0AH
035D 84             1118                                                       DIV AB        ; / 10
035E F541           1119                                                     mov 41h, A     ; save tens elsewhere
0360 E5F0           1120                                                     mov A, B      ; get units
0362 F542           1121                                                     mov 42h,A      ; save in R1
                    1122     
                    1123                                                                     ;BCD to ASCII
0364 E540           1124                                                                     mov A, 40h
0366 2430           1125                                                                     add A, #30h
0368 F540           1126                                                                     mov 40h, A
036A E541           1127                                                                     mov A, 41h
036C 2430           1128                                                                     add A, #30h
036E F541           1129                                                                     mov 41h, A
0370 E542           1130                                                                     mov A, 42h 
0372 2430           1131                                                                     add A, #30h
0374 F542           1132                                                                     mov 42h, A
                    1133     
0376 22             1134                                                                     ret
                    1135                                                                     
                    1136     
                    1137     ;*****************************************************************************
                    1138     ;*****************************************************************************
                    1139     ;  
                    1140     ;  ascii_to_bin subroutine
                    1141     ;
                    1142     ;  Converts 12 bit ASCII number (in three registers) to binary number
                    1143     ;
                    1144     ;  Input: R3 (Hundreds), R4 (Tens), R5 (Ones)
                    1145     ;  Output: Binary number in R5
                    1146     ;
                    1147     ;
                    1148     ;
                    1149     ;*****************************************************************************
                    1150     
0377                1151     ascii_to_bin:
0377 E4             1152                                                             clr A
0378 C3             1153                                                             clr c
                    1154                                                             
0379 EB             1155                                                             mov A, R3
037A 9430           1156                                                             subb A, #30h
037C FB             1157                                                             mov R3, A
037D EC             1158                                                             mov A, R4
037E 9430           1159                                                             subb A, #30h
0380 FC             1160                                                             mov R4, A
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    15

0381 ED             1161                                                             mov A, R5
0382 9430           1162                                                             subb A, #30h
0384 FD             1163                                                             mov R5, A
                    1164                                                             
0385 75F00A         1165                                                             mov B, #0ah
0388 EC             1166                                                             mov A, R4
0389 A4             1167                                                             mul AB
038A 2D             1168                                                             add A, R5
038B FD             1169                                                             mov R5, A
038C 75F064         1170                                                             mov B, #64h
038F EB             1171                                                             mov A, R3
0390 A4             1172                                                             mul AB
0391 2D             1173                                                             add A, R5
0392 F549           1174                                                             mov 49h, A
                    1175     
0394 22             1176                                                             ret
                    1177     
                    1178     
                    1179     ;*****************************************************************************
                    1180     ;*****************************************************************************
                    1181     ;
                    1182     ;  Get Sensor levels subroutine
                    1183     ;
                    1184     ;  Subroutines that check the sensors levels.  
                    1185     ;
                    1186     ;*****************************************************************************
                    1187     
                    1188     ;UV Sensor
0395                1189     check_uv:                
0395 75BB0C         1190                                                      mov amx0p, #0Ch 
                    1191     
0398 D2EC           1192                                                      setb ad0busy
039A D100           1193                                                      call delay
039C C2EC           1194                                                      clr ad0busy
                    1195     
039E E5BE           1196                                                      mov A, ADC0H
03A0 7152           1197                  call bin_to_ascii ; get reading from sensor
                    1198                                                      
03A2 74DE           1199                                                      mov A, #0DEh
03A4 7143           1200                                                      call lcd_position
                    1201     
03A6 E540           1202                                                      mov A, 40h
03A8 B1F5           1203                                                      call display
                    1204     
03AA E541           1205                                                      mov A, 41h
03AC B1F5           1206                                                      call display
                    1207     
03AE 742E           1208                                                      mov A, #2Eh
03B0 B1F5           1209                                                      call display
                    1210     
03B2 E542           1211                                                      mov A, 42h
03B4 B1F5           1212                                                      call display
                    1213                                                       
03B6 22             1214                  ret
                    1215     
                    1216     
                    1217     
                    1218     ;Moisture Sensor 1
03B7                1219     check_moisture1:
03B7 75BB0D         1220                                                     mov amx0p, #0Dh
                    1221     
03BA D2EC           1222                                                     setb ad0busy
03BC D100           1223                                                     call delay
03BE C2EC           1224                                                     clr ad0busy
                    1225     
03C0 85BE46         1226                                                     mov 46h, ADC0H
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    16

                    1227     
03C3 E5BE           1228                                                     mov A, ADC0H
03C5 7152           1229                                                     call bin_to_ascii
                    1230     
03C7 74C9           1231                                                     mov A, #0C9h
03C9 7143           1232                                                     call lcd_position
                    1233     
03CB E540           1234                                                     mov A, 40h
03CD B1F5           1235                                                     call display
                    1236     
03CF E541           1237                                                     mov A, 41h
03D1 B1F5           1238                                                     call display
                    1239     
03D3 E542           1240                                                     mov A, 42h
03D5 B1F5           1241                                                     call display
                    1242     
03D7 AB50           1243                                                     mov R3, 50h
03D9 AC51           1244                                                     mov R4, 51h
03DB AD52           1245                                                     mov R5, 52h
                    1246     
03DD 7177           1247                                                     call ascii_to_bin
                    1248     
03DF E546           1249                                                     mov A, 46h
                    1250     
03E1 9123           1251                                                     call compare
                    1252     
03E3 B40003         1253                                                     cjne A, #00h, pump1_off
03E6 D285           1254                                                     setb pump1
03E8 22             1255                                                     ret
                    1256     
03E9 C285           1257     pump1_off:      clr pump1                       
                    1258      
03EB 22             1259                                                     ret
                    1260     
                    1261     
                    1262     ;Moisture Sensor 2
03EC                1263     check_moisture2:
03EC 75BB0E         1264                                                     mov amx0p, #0Eh
                    1265     
03EF D2EC           1266                                                     setb ad0busy
03F1 D100           1267                                                     call delay
03F3 C2EC           1268                                                     clr ad0busy
03F5 D100           1269                                                     call delay
                    1270     
03F7 85BE47         1271                                                     mov 47h, ADC0H
                    1272     
03FA E5BE           1273                                                     mov A, ADC0H
03FC 7152           1274                                                     call bin_to_ascii
                    1275     
03FE 749D           1276                                                     mov A, #9Dh
0400 7143           1277                                                     call lcd_position
                    1278     
0402 E540           1279                                                     mov A, 40h
0404 B1F5           1280                                                     call display
                    1281     
0406 E541           1282                                                     mov A, 41h
0408 B1F5           1283                                                     call display
                    1284     
040A E542           1285                                                     mov A, 42h
040C B1F5           1286                                                     call display
                    1287     
040E AB53           1288                                                     mov R3, 53h
0410 AC54           1289                                                     mov R4, 54h
0412 AD55           1290                                                     mov R5, 55h
                    1291     
0414 7177           1292                                                     call ascii_to_bin
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    17

                    1293     
0416 E547           1294                                                     mov A, 47h
                    1295     
0418 9123           1296                                                     call compare
                    1297     
041A B40003         1298                                                     cjne A, #00h, pump2_off
041D D284           1299                                                     setb pump2
041F 22             1300                                                     ret
                    1301     
0420 C284           1302     pump2_off:      clr pump2       
                    1303     
0422 22             1304                                                     ret
                    1305     
                    1306     
                    1307     ;*****************************************************************************
                    1308     ;*****************************************************************************
                    1309     ;
                    1310     ;  Compare subroutine
                    1311     ;
                    1312     ;  Compares the input level with the desired level
                    1313     ;
                    1314     ;*****************************************************************************
                    1315     
0423                1316     compare:
0423 B54904         1317                                                     cjne A, 49h, check_less
0426 7401           1318                                                     mov A, #01h
0428 8008           1319                                                     jmp cmp_end
                    1320     
042A                1321     check_less:
042A 4004           1322                                                     jc less_than
042C 7401           1323                                                     mov A, #01h
042E 8002           1324                                                     jmp cmp_end
                    1325     
                    1326     
0430 7400           1327     less_than:      mov A, #00h
                    1328     
0432 22             1329     cmp_end:                ret 
                    1330     
                    1331     
                    1332     
                    1333     ;*****************************************************************************
                    1334     ;*****************************************************************************
                    1335     ;
                    1336     ;  Test LCD subroutine
                    1337     ;
                    1338     ;        Fill all dots on the LCD to test if any are dead
                    1339     ;
                    1340     ;*****************************************************************************
                    1341     
0433                1342     lcd_test:
0433 B1D8           1343                                              call clear
                    1344     
0435 7880           1345                                              mov R0, #80H                                      
                                  
                    1346                                                     
0437 E8             1347     lcdt1:           mov A, R0
0438 7143           1348                                              call lcd_position
043A 74FF           1349                                              mov A, #0FFH
043C B1F5           1350                                              call display
043E 08             1351                                              inc R0
043F B894F5         1352                                              cjne R0, #94H, lcdt1
                    1353                                              
0442 78C0           1354                                              mov R0, #0C0H
                    1355     
0444 E8             1356     lcdt2:           mov A, R0
0445 7143           1357                                              call lcd_position
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    18

0447 74FF           1358                                              mov A, #0FFH
0449 B1F5           1359                                              call display
044B 08             1360                                              inc R0
044C B8D4F5         1361                                              cjne R0, #0D4H, lcdt2                             
                                    
                    1362     
044F 7894           1363                                              mov R0, #94H
                    1364     
0451 E8             1365     lcdt3:           mov A, R0
0452 7143           1366                                              call lcd_position
0454 74FF           1367                                              mov A, #0FFH
0456 B1F5           1368                                              call display
0458 08             1369                                              inc R0
0459 B8A8F5         1370                                              cjne R0, #0A8H, lcdt3  
                    1371     
045C 78D4           1372                                              mov R0, #0D4H
                    1373     
045E E8             1374     lcdt4:           mov A, R0
045F 7143           1375                                              call lcd_position
0461 74FF           1376                                              mov A, #0FFH
0463 B1F5           1377                                              call display
0465 08             1378                                              inc R0
0466 B8E8F5         1379                                              cjne R0, #0E8H, lcdt4
                    1380     
                    1381     
0469 D105           1382                                              call four_second_delay
                    1383     
046B B1D8           1384                                              call Clear
                    1385                                                     
046D 7800           1386                                              mov R0, #0
                    1387                                              
046F 319A           1388                                              call test_menu_text    
                    1389     
0471 22             1390                                              ret
                    1391     
                    1392     
                    1393     
                    1394     ;*****************************************************************************
                    1395     ;*****************************************************************************
                    1396     ;
                    1397     ;  Test Sensors subroutine
                    1398     ;
                    1399     ;  Tests the sensors
                    1400     ;
                    1401     ;*****************************************************************************
                    1402     
0472                1403     sensors_test:
                    1404     
                    1405                 ;UV Sensor Test     
                    1406                                                     ;--------------
0472 75BB0C         1407                                                     mov amx0p, #00Ch 
0475 D2EC           1408                 setb ad0busy
0477 D100           1409                                                     call delay
0479 C2EC           1410                                                     clr ad0busy 
                    1411     
047B C2D5           1412                                                     clr F0
                    1413     
                    1414                     
047D B1D8           1415                                               call clear
047F 7480           1416                                                     mov A, #80h
0481 7143           1417                                                     call lcd_position
                    1418     
0483 9006EE         1419                                                     mov DPTR, #uvtestdb1
0486 B1E4           1420                                                     call send_string
                    1421     
                    1422                                                                             
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    19

0488 74C0           1423                 mov A, #0C0h
048A 7143           1424                                                     call lcd_position
                    1425     
048C 900700         1426                                                     mov DPTR, #uvtestdb2
048F B1E4           1427                                                     call send_string
                    1428     
                    1429     
0491 7494           1430                 mov A, #94h
0493 7143           1431                                                     call lcd_position
                    1432     
0495 900714         1433                                                     mov DPTR, #testreadydb
0498 B1E4           1434                                                     call send_string
                    1435     
                    1436     
                    1437     
049A                1438     uvkey:
049A 11B0           1439                                                     call keyscan
                    1440     
049C B80E0F         1441                                                     cjne R0, #0Eh, uvk1
049F E5BD           1442                                                     mov A, ADC0L
04A1 B40004         1443                                                     cjne A, #00h, uvpass
04A4 B14B           1444                                                     call fail
04A6 800C           1445                                                     jmp uvend
04A8 B13F           1446     uvpass:     call pass
                    1447                                                     
04AA C2D5           1448     uvcont1:                CLR F0
04AC 8006           1449                                                     jmp uvend
                    1450     
04AE B80CE9         1451     uvk1:       cjne R0, #0Ch, uvkey
04B1 319A           1452                                                     call test_menu_text
04B3 22             1453                                                     ret
                    1454     
04B4 D105           1455     uvend:      call four_second_delay
                    1456     
                    1457     
                    1458                                                     ;Moisture sensor 1 test
                    1459                                                     ;----------------------
04B6 75BB0D         1460                                                     mov amx0p, #00Dh
04B9 D2EC           1461                                                     setb ad0busy
04BB D100           1462                                                     call delay
04BD C2EC           1463                                                     clr ad0busy
                    1464     
04BF C2D5           1465                                                     clr F0
                    1466     
04C1 7480           1467                                                     mov A, #80h
04C3 7143           1468                                                     call lcd_position
                    1469     
04C5 900728         1470                                                     mov DPTR, #msensortestdb1
04C8 B1E4           1471                                                     call send_string
                    1472     
04CA 74C0           1473                                                     mov A, #0C0h
04CC 7143           1474                                                     call lcd_position
                    1475                                                     
04CE 90073C         1476                                                     mov DPTR, #msensortestdb2
04D1 B1E4           1477                                                     call send_string
                    1478     
04D3 7494           1479                                                     mov A, #94h
04D5 7143           1480                                                     call lcd_position
                    1481                                                     
04D7 900714         1482                                                     mov DPTR, #testreadydb
04DA B1E4           1483                                                     call send_string
                    1484     
                    1485     
04DC                1486     m1key:
04DC 11B0           1487                                                     call keyscan
                    1488     
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    20

04DE B80E0F         1489                                                     cjne R0, #0Eh, m1k1
04E1 E5BD           1490                                                     mov A, ADC0L
04E3 B40004         1491                                                     cjne A, #00h, m1pass
04E6 B14B           1492                                                     call fail
04E8 800C           1493                                                     jmp m1end
04EA B13F           1494     m1pass:     call pass
                    1495                                                     
04EC C2D5           1496     m1cont1:                CLR F0
04EE 8006           1497                                                     jmp m1end
                    1498     
04F0 B80CE9         1499     m1k1:       cjne R0, #0Ch, m1key
04F3 319A           1500                                                     call test_menu_text
04F5 22             1501                                                     ret
                    1502     
04F6 D105           1503     m1end:      call four_second_delay                                              
                    1504     
                    1505     
                    1506                                                     ;Moisture sensor 2 test
                    1507                                                     ;----------------------
04F8 75BB0D         1508                                                     mov amx0p, #00Dh
04FB D2EC           1509                                                     setb ad0busy
04FD D100           1510                                                     call delay
04FF C2EC           1511                                                     clr ad0busy
                    1512     
0501 C2D5           1513                                                     clr F0
                    1514     
0503 7480           1515                                                     mov A, #80h
0505 7143           1516                                                     call lcd_position
                    1517     
0507 900728         1518                                                     mov DPTR, #msensortestdb1
050A B1E4           1519                                                     call send_string
                    1520     
050C 74C0           1521                                                     mov A, #0C0h
050E 7143           1522                                                     call lcd_position
                    1523                                                     
0510 90074B         1524                                                     mov DPTR, #msensortestdb3
0513 B1E4           1525                                                     call send_string
                    1526     
0515 7494           1527                                                     mov A, #94h
0517 7143           1528                                                     call lcd_position
                    1529                                                     
0519 900714         1530                                                     mov DPTR, #testreadydb
051C B1E4           1531                                                     call send_string
                    1532     
                    1533     
051E                1534     m2key:
051E 11B0           1535                                                     call keyscan
                    1536     
0520 B80E0F         1537                                                     cjne R0, #0Eh, m2k1
0523 E5BD           1538                                                     mov A, ADC0L
0525 B40004         1539                                                     cjne A, #00h, m2pass
0528 B14B           1540                                                     call fail
052A 800C           1541                                                     jmp m2end
052C B13F           1542     m2pass:     call pass
                    1543                                                     
052E C2D5           1544     m2cont2:                CLR F0
0530 8006           1545                                                     jmp m2end
                    1546     
0532 B80CE9         1547     m2k1:       cjne R0, #0Ch, m2key
0535 319A           1548                                                     call test_menu_text
0537 22             1549                                                     ret
                    1550     
0538 D105           1551     m2end:      call four_second_delay
                    1552                                                                                                
                                  
                    1553     
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    21

                    1554     
                    1555                                             
                    1556     
053A C2D5           1557                                                     CLR F0
053C 319A           1558                                                     call test_menu_text
                    1559                                                     
053E 22             1560                 ret
                    1561     
                    1562     
                    1563     
                    1564     
053F                1565     pass: ;if test passes (reads a voltage)
                    1566     
053F B1D8           1567                                                     call clear
                    1568     
0541 7480           1569                                                     mov A, #80h
0543 7143           1570                                                     call lcd_position
                    1571     
0545 90075A         1572                                                     mov DPTR, #testpassdb
0548 B1E4           1573                                                     call send_string
                    1574     
054A 22             1575                             ret                                             
                    1576                                                     
054B                1577     fail: ;if test fails (doesn't read a voltage)
                    1578                                                     
054B B1D8           1579                                                     call clear
                    1580     
054D 7480           1581                                                     mov A, #80h
054F 7143           1582                                                     call lcd_position
                    1583     
0551 900767         1584                                                     mov DPTR, #testfaildb
0554 B1E4           1585                                                     call send_string
                    1586     
0556 22             1587                             ret
                    1588     
                    1589     
                    1590     
                    1591     ;*****************************************************************************
                    1592     ;*****************************************************************************
                    1593     ;
                    1594     ;  motors_test subroutine
                    1595     ;
                    1596     ;  Tests the motors
                    1597     ;
                    1598     ;
                    1599     ;*****************************************************************************
                    1600     
                    1601     
0557                1602     pumps_test:
0557 C2D5           1603                                                     clr F0
                    1604                                                             
0559 B1D8           1605                                                     call clear
                    1606     
                    1607     
055B 7480           1608                                                     mov A, #80h
055D 7143           1609                                                     call lcd_position
055F 900774         1610                                                     mov DPTR, #pumptestdb1
0562 B1E4           1611                                                     call send_string
                    1612     
0564 74C0           1613                                                     mov A, #0C0h
0566 7143           1614                                                     call lcd_position
0568 900788         1615                                                     mov DPTR, #pumptestdb2
056B B1E4           1616                                                     call send_string
                    1617     
056D 7494           1618                                                     mov A, #94h
056F 7143           1619                                                     call lcd_position
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    22

0571 900714         1620                                                     mov DPTR, #testreadydb
0574 B1E4           1621                                                     call send_string
                    1622     
0576                1623     pumpkey:                
0576 11B0           1624                                                     call keyscan
                    1625                                                     
0578 B80E04         1626                                                     cjne R0, #0Eh, ptk0
057B C2D5           1627                                                     CLR F0
057D 8007           1628                                                     jmp pump_on
                    1629     
057F B80CF4         1630     ptk0:                           cjne R0, #0Ch, pumpkey
0582 C2D5           1631                                                     CLR F0
0584 8011           1632                                                     jmp pump_end
                    1633     
0586                1634     pump_on:
0586 B1D8           1635                                                     call clear
                    1636                                                     
0588 900799         1637                                                     mov DPTR, #pumptestdb3
058B B1E4           1638                                                     call send_string
                    1639     
058D D285           1640                                                     setb pump1
058F D284           1641                                                     setb pump2
                    1642     
0591 D105           1643                                                     call four_second_delay
                    1644     
0593 C285           1645                                                     clr pump1
0595 C284           1646                                                     clr pump2
                    1647     
                    1648                                                     
0597                1649     pump_end:       
0597 319A           1650                                                     call test_menu_text
0599 22             1651                                                     ret
                    1652                                                     
                    1653     
                    1654     
                    1655     
                    1656     ;*****************************************************************************
                    1657     ;*****************************************************************************
                    1658     ;
                    1659     ;  TIMER2_ISR interrupt service routine
                    1660     ;
                    1661     ;  Every 0.2 seconds this ISR will be called.
                    1662     ;  You will need to add code to take action during this IRS.
                    1663     ;
                    1664     ;*****************************************************************************
                    1665     
059A                1666     Timer2_ISR:
                    1667     
                    1668     ;         ADD YOUR TIMER2 ISR CODE HERE!!!!
                    1669                                                     
                    1670                                               
059A 7195           1671                                                     call check_uv
                    1672     
059C 75BB0D         1673                                               mov amx0p, #0Dh
059F 71B7           1674                                                     call check_moisture1
                    1675     
05A1 75BB0E         1676                                                     mov amx0p, #0Eh
05A4 71EC           1677                                                     call check_moisture2
                    1678     
                    1679                                                     
                    1680     
                    1681     ;         YOUR T2ISR CODE SHOULD STOP HERE!!!
                    1682     
05A6 C2CF           1683                 clr  TF2H                 ; Clears Timer 2 flag because unlike
                    1684                                           ;  timers 0 & 1 the hardware does not
                    1685                                           ;  clear timer 2 flag automatically
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    23

                    1686                                           ;  during an ISR
05A8 32             1687                 reti                      ; Return to "where ever" from interrupt
                    1688     
                    1689     
                    1690     
                    1691     ;*****************************************************************************
                    1692     ;*****************************************************************************
                    1693     ;
                    1694     ; TIMER2_INIT subroutine
                    1695     ;
                    1696     ; This subroutine initializes Timer 2 to generate an interupt every 0.2
                    1697     ; seconds.
                    1698     ;
                    1699     ;*****************************************************************************
                    1700     
05A9                1701     Timer2_Init:
05A9 75CAB0         1702                 mov  TMR2RLL, #LOW(-50000) ; Load low byte reload value
05AC 75CB3C         1703                 mov  TMR2RLH, #HIGH(-50000) ; Loads high byte reload value
05AF 75CCB0         1704                 mov  TMR2L, #LOW (-50000) ; Loads initial byte value
05B2 75CD3C         1705                 mov  TMR2H, #HIGH(-50000) ; Loads initial byte value
05B5 75C804         1706                 mov  TMR2CN,  #00000100B  ; Configures Timer2
                    1707                                           ; 00000100B
                    1708                                           ;      1> Sets T2 to run 
05B8 75A8A0         1709                 mov  IE, #10100000B       ; Enables interrupts
                    1710                                           ; 10100000B
                    1711                                           ; 1> Enable Global interrupt
                    1712                                           ;   1> Enable Timer2 interrupt
05BB 22             1713                 ret                       ; Return from CALL
                    1714     
                    1715     
                    1716     
                    1717     ;*****************************************************************************
                    1718     ;*****************************************************************************
                    1719     ;
                    1720     ;  CURSOR_OFF subroutine
                    1721     ;
                    1722     ;  Turns LCD cursor off.
                    1723     ;
                    1724     ;  INPUT:  none
                    1725     ;  OUTPUT: Sends command to LCD to turn cursor and cursor position character
                    1726     ;           off.
                    1727     ;  ACTION: Blanks cursor and cursor position character.
                    1728     ;
                    1729     ;*****************************************************************************
                    1730     
05BC                1731     cursor_off:
05BC C293           1732                 clr  RS                   ; Register Select ( 0 = Instruction )
05BE C292           1733                 clr  RW
05C0 75A00C         1734                 mov  LCD, #00001100B      ; Sends data to LCD
05C3 D294           1735                 setb Enable               ; Latches the data
05C5 D100           1736                 call delay                ; Waits
05C7 C294           1737                 clr  Enable               ; Then resets the latch
05C9 22             1738                 ret 
                    1739     
                    1740     ;*****************************************************************************
                    1741     ;*****************************************************************************
                    1742     ;
                    1743     ;  CURSOR_ON subroutine
                    1744     ;
                    1745     ;  Turns LCD cursor on.
                    1746     ;
                    1747     ;  INPUT:  none
                    1748     ;  OUTPUT: Sends command to LCD to turn cursor and cursor position character
                    1749     ;           on.
                    1750     ;  ACTION: Turns on cursor and cursor position character.
                    1751     ;
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    24

                    1752     ;*****************************************************************************
                    1753     
05CA                1754     cursor_on:
05CA C293           1755                 clr  RS                   ; Register Select ( 0 = Instruction )
05CC C292           1756                 clr  RW
05CE 75A00F         1757                 mov  LCD, #00001111B      ; Sends data to LCD
05D1 D294           1758                 setb Enable               ; Latches the data
05D3 D100           1759                 call delay                ; Waits
05D5 C294           1760                 clr  Enable               ; Then resets the latch
05D7 22             1761                 ret
                    1762                                                                                                
                                                  
                    1763     ;*****************************************************************************
                    1764     ;*****************************************************************************
                    1765     ;
                    1766     ;  clear subroutine
                    1767     ;
                    1768     ;  Clears the LCD.
                    1769     ;  Used one 8-bit data move to send the Clear Display Instruction command
                    1770     ;  (01H) to the LCD.  
                    1771     ;
                    1772     ;  The subroutine is used during initialization and when the display is full
                    1773     ;  to clear the display before it wraps back to DDRAM address 00.
                    1774     ;
                    1775     ;  INPUT: none
                    1776     ;  OUTPUT: Port 2 (LCD) and P1.4 (ENABLE)
                    1777     ;
                    1778     ;***************************************************************************** 
                    1779     
05D8                1780     clear:                                ; E X R R D D D D D D D D   
                    1781                                           ; | | S W 7 6 5 4 3 2 1 0 
                    1782                                           ; | | | | | | | | | | | | 
05D8 75A001         1783                      mov LCD, #01H        ; 1 0 0 0 0 0 0 0 0 0 0 1 Clear Display word
05DB D140           1784                      call Busy            ; Check Busy Flag
05DD D294           1785                      setb ENABLE           ; Latched the first byte.
05DF D100           1786                      call delay           ; Waits.
05E1 C294           1787                      clr ENABLE          ; Then resets latch
05E3 22             1788                      ret
                    1789     
                    1790     
                    1791     ;*****************************************************************************
                    1792     ;*****************************************************************************
                    1793     ;
                    1794     ;  send_string subbroutine
                    1795     ;
                    1796     ;  This routine sends messgaes that terminate with NULL to the display
                    1797     ;  subroutine.
                    1798     ;
                    1799     ;  INPUT: DPTR pointing to the DB table to send.
                    1800     ;  OUTPUT: characters to DISPLAY
                    1801     ;  USES: Accumulator and R4.
                    1802     ;
                    1803     ;*****************************************************************************
                    1804     
05E4                1805     send_string:
05E4 7C00           1806                 mov  R4, #0
05E6 EC             1807     sstr1:      mov  A, R4
05E7 93             1808                 movc A, @A+DPTR
05E8 B40002         1809                 cjne A, #0, sstr2
05EB 8007           1810                 jmp  exit_sstr
05ED B1F5           1811     sstr2:      call DISPLAY
05EF D100           1812                 call DELAY
05F1 0C             1813                 inc  R4
05F2 80F2           1814                 jmp  sstr1
05F4 22             1815     exit_sstr:  ret
                    1816     
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    25

                    1817     
                    1818     ;*****************************************************************************
                    1819     ;*****************************************************************************
                    1820     ;
                    1821     ;  display subroutine
                    1822     ;
                    1823     ;  Moves the control or ASCII byte in the accumulator into the LCD 8-bits at
                    1824     ;  a time. 
                    1825     ;
                    1826     ;  LOCAL REGISTERS USED: R3
                    1827     ;  INPUT: byte in the Accumulator
                    1828     ;  OUTPUT: One byte to the LCD. 
                    1829     ;
                    1830     ;*****************************************************************************
                    1831     
05F5                1832     display:                              ; The data to be sent is in A.
05F5 D293           1833                      setb RS              ; Register Select ( 1 = Data )                     
05F7 F5A0           1834                      mov LCD, A           ; Sends data to LCD
05F9 D294           1835                                                                      setb ENABLE          ; Lat
                             ches the data.
05FB D100           1836                      call delay           ; Waits.
05FD C294           1837                      clr ENABLE           ; Then resets the latch.
                    1838     
05FF 22             1839     next3:           ret
                    1840     
                    1841     
                    1842     
                    1843     ;*****************************************************************************
                    1844     ;*****************************************************************************
                    1845     ;
                    1846     ;  delay subroutine
                    1847     ;
                    1848     ;  This subroutine is a simple delay loop that is used to provide timing for
                    1849     ;  the LCD interface.
                    1850     ;
                    1851     ;  LOCAL REGISTERS USED: R5
                    1852     ;  INPUT: none
                    1853     ;  OUTPUT: none
                    1854     ;  ACTION: Provides time delay for the LCD interface.
                    1855     ;
                    1856     ;*****************************************************************************
                    1857     
0600                1858     delay:           
                    1859     
0600 7D00           1860                      mov   R5, #00h
0602 DDFE           1861                      djnz  R5, $
                    1862     
0604 22             1863                      ret
                    1864     
                    1865     
                    1866     ;*****************************************************************************
                    1867     ;*****************************************************************************
                    1868     ;
                    1869     ;  delay subroutine
                    1870     ;
                    1871     ;  This subroutine is a simple delay loop that is used to provide timing for
                    1872     ;  the LCD interface.
                    1873     ;
                    1874     ;  LOCAL REGISTERS USED: R1, 
                    1875     ;  INPUT: none
                    1876     ;  OUTPUT: none
                    1877     ;  ACTION: Waits for ACCx100 amount of milliseconds
                    1878     ;
                    1879     ;*****************************************************************************
                    1880     
0605                1881     four_second_delay:
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    26

0605 758901         1882                                                     mov TMOD, #01H
0608 7928           1883     fsdelay:                mov R1, #40
060A 85FF8C         1884     fsagain:                mov TH0, high(-100)
060D 859C8A         1885                                                     mov TL0, low(-100)
0610 D28C           1886                                                     setb TR0
0612 308DFD         1887     fswait:                 jnb TF0, fswait
0615 C28D           1888                                                     clr TF0
0617 C28C           1889                                                     clr TR0
0619 D9EF           1890                                                     djnz R1, fsagain
                    1891     
061B 22             1892                                                     ret
                    1893     
                    1894     ;*****************************************************************************
                    1895     ;*****************************************************************************
                    1896     ;
                    1897     ;  reset
                    1898     ;
                    1899     ;  Initialization by instruction
                    1900     ;  This subroutine sends a Function Set byte (30H) to the LCD three times so that the
                    1901     ;  LCD will reset correctly and communicate with the 8051.
                    1902     ;
                    1903     ;  INPUT: none
                    1904     ;  OUTPUT: LCD (P2), ENABLE (P1.4)
                    1905     ;
                    1906     ;*****************************************************************************
                    1907     
061C                1908     reset:           
061C D100           1909                                                                      call delay
061E 75A030         1910                      mov LCD, #30H        ; Writes Function Set.
0621 D294           1911                      setb ENABLE          ; Latches Instruction.
0623 D100           1912                      call delay           ; Waits.
0625 C294           1913                      clr ENABLE           ; Then resets latch.
0627 D140           1914                                                                      call Busy            ; Che
                             ck Busy Flag delay
0629 75A030         1915                      mov LCD, #30H        ; Writes Function Set.
062C D294           1916                      setb ENABLE          ; Latches Instruction.
062E D100           1917                      call delay           ; Waits.
0630 C294           1918                      clr ENABLE           ; Then resets the latch.
0632 D140           1919                      call Busy            ; Check Busy Flagdelay
0634 75A030         1920                                                                      mov LCD, #30H        ; Wri
                             tes Function Set.
0637 D294           1921                      setb ENABLE          ; Latches Instruction
0639 D100           1922                      call delay           ; Waits
063B C294           1923                      clr Enable           ; Then resets the latch
063D D140           1924                                              call Busy            ; Check Busy Flag
063F 22             1925                      ret 
                    1926     
                    1927     ;*****************************************************************************
                    1928     ;
                    1929     ;Busy
                    1930     ;
                    1931     ; This Subroutine check the Busy Flag (DB7) to ensure the LCD is not busy
                    1932     ;
                    1933     ;INPUT  P2.7
                    1934     ;*****************************************************************************
0640                1935     Busy:            
0640 C293           1936                                                                      clr RS
0642 D292           1937                                                                      setb RW
0644 20A7FD         1938                                                                      jb P2.7, $
0647 C292           1939                                                                      clr RW
0649 22             1940                      ret
                    1941     ;
                    1942     ;*****************************************************************************
                    1943     ;
                    1944     ;*****************************************************************************
                    1945     ;
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    27

                    1946     ;  Tables
                    1947     ;
                    1948     ;*****************************************************************************
                    1949     
                    1950     
                    1951     
064A 31323300       1952     keys:            DB  '1','2','3',NULL,'4','5','6','B','7','8','9','C','*','0','#','D'
064E 34353642                
0652 37383943                
0656 2A302344                
                    1953     
065A 45434554       1954     classdb:         DB  'ECET 3220-Fall 2017',NULL
065E 20333232                
0662 302D4661                
0666 6C6C2032                
066A 30313700                
066E 20202046       1955     fosterdb:                                DB      '   Foster Gorman',NULL
0672 6F737465                
0676 7220476F                
067A 726D616E                
067E 00                      
067F 20202054       1956     timmydb:                                 DB      '   Timmy Adeniyi',NULL
0683 696D6D79                
0687 20416465                
068B 6E697969                
068F 00                      
                    1957     
0690 2D2D2D2D       1958     pnamedb:         DB      '------EZ-Water------',NULL
0694 2D2D455A                
0698 2D576174                
069C 65722D2D                
06A0 2D2D2D2D                
06A4 00                      
06A5 506C616E       1959     msensor1db:                      DB  'Plant 1: ',NULL
06A9 7420313A                
06AD 2000                    
06AF 506C616E       1960     msensor2db:                      DB      'Plant 2: ',NULL
06B3 7420323A                
06B7 2000                    
06B9 55562049       1961     uvsensordb:      DB  'UV Index: ',NULL
06BD 6E646578                
06C1 3A2000                  
                    1962     
06C4 312E2054       1963     tmlcddb:                                 DB  '1. Test LCD',NULL
06C8 65737420                
06CC 4C434400                
06D0 322E2054       1964     tmsensorsdb:             DB      '2. Test Sensors',NULL
06D4 65737420                
06D8 53656E73                
06DC 6F727300                
06E0 332E2054       1965     tmpumpsdb:                       DB  '3. Test Pumps',NULL
06E4 65737420                
06E8 50756D70                
06EC 7300                    
                    1966     
06EE 50757420       1967     uvtestdb1:       DB      'Put the UV sensor',NULL
06F2 74686520                
06F6 55562073                
06FA 656E736F                
06FE 7200                    
0700 696E2064       1968     uvtestdb2:                       DB  'in direct sunlight.',NULL
0704 69726563                
0708 74207375                
070C 6E6C6967                
0710 68742E00                
0714 50726573       1969     testreadydb:     DB  'Press # when ready.',NULL
A51 MACRO ASSEMBLER  D3PROJECT                                                            11/15/2017 12:06:57 PAGE    28

0718 73202320                
071C 7768656E                
0720 20726561                
0724 64792E00                
0728 50757420       1970     msensortestdb1:  DB  'Put moisture sensor',NULL
072C 6D6F6973                
0730 74757265                
0734 2073656E                
0738 736F7200                
073C 3120696E       1971     msensortestdb2:  DB  '1 in the soil.',NULL
0740 20746865                
0744 20736F69                
0748 6C2E00                  
074B 3220696E       1972     msensortestdb3:  DB  '2 in the soil.',NULL
074F 20746865                
0753 20736F69                
0757 6C2E00                  
075A 54657374       1973     testpassdb:      DB  'Test Passed!',NULL
075E 20506173                
0762 73656421                
0766 00                      
0767 54657374       1974     testfaildb:      DB  'Test Failed!',NULL
076B 20466169                
076F 6C656421                
0773 00                      
0774 4D616B65       1975     pumptestdb1:             DB  'Make sure the tubes',NULL
0778 20737572                
077C 65207468                
0780 65207475                
0784 62657300                
0788 61726520       1976     pumptestdb2:             DB  'are in the pots.',NULL
078C 696E2074                
0790 68652070                
0794 6F74732E                
0798 00                      
0799 20546573       1977     pumptestdb3:     DB  ' Testing motors',NULL
079D 74696E67                
07A1 206D6F74                
07A5 6F727300                
                    1978     
07A9 44657369       1979     desireddb1:      DB      'Desired level for', NULL
07AD 72656420                
07B1 6C657665                
07B5 6C20666F                
07B9 7200                    
07BB 706C616E       1980     desireddb2:                      DB  'plant 1:',NULL
07BF 7420313A                
07C3 00                      
07C4 706C616E       1981     desireddb3:                      DB  'plant 2:',NULL 
07C8 7420323A                
07CC 00                      
                    1982     
                    1983     
                    1984                      END


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
